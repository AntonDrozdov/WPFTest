//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.WCFStoreServiceManager {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFStoreServiceManager.IStoreService")]
    public interface IStoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Goods", ReplyAction="http://tempuri.org/IStoreService/GoodsResponse")]
        DataManager.DMModel.Good[] Goods();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Goods", ReplyAction="http://tempuri.org/IStoreService/GoodsResponse")]
        System.Threading.Tasks.Task<DataManager.DMModel.Good[]> GoodsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetGood", ReplyAction="http://tempuri.org/IStoreService/GetGoodResponse")]
        DataManager.DMModel.Good GetGood(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetGood", ReplyAction="http://tempuri.org/IStoreService/GetGoodResponse")]
        System.Threading.Tasks.Task<DataManager.DMModel.Good> GetGoodAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SaveGood", ReplyAction="http://tempuri.org/IStoreService/SaveGoodResponse")]
        void SaveGood(DataManager.DMModel.Good item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SaveGood", ReplyAction="http://tempuri.org/IStoreService/SaveGoodResponse")]
        System.Threading.Tasks.Task SaveGoodAsync(DataManager.DMModel.Good item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteGood", ReplyAction="http://tempuri.org/IStoreService/DeleteGoodResponse")]
        void DeleteGood(DataManager.DMModel.Good item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteGood", ReplyAction="http://tempuri.org/IStoreService/DeleteGoodResponse")]
        System.Threading.Tasks.Task DeleteGoodAsync(DataManager.DMModel.Good item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStoreServiceChannel : GUI.WCFStoreServiceManager.IStoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StoreServiceClient : System.ServiceModel.ClientBase<GUI.WCFStoreServiceManager.IStoreService>, GUI.WCFStoreServiceManager.IStoreService {
        
        public StoreServiceClient() {
        }
        
        public StoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataManager.DMModel.Good[] Goods() {
            return base.Channel.Goods();
        }
        
        public System.Threading.Tasks.Task<DataManager.DMModel.Good[]> GoodsAsync() {
            return base.Channel.GoodsAsync();
        }
        
        public DataManager.DMModel.Good GetGood(int Id) {
            return base.Channel.GetGood(Id);
        }
        
        public System.Threading.Tasks.Task<DataManager.DMModel.Good> GetGoodAsync(int Id) {
            return base.Channel.GetGoodAsync(Id);
        }
        
        public void SaveGood(DataManager.DMModel.Good item) {
            base.Channel.SaveGood(item);
        }
        
        public System.Threading.Tasks.Task SaveGoodAsync(DataManager.DMModel.Good item) {
            return base.Channel.SaveGoodAsync(item);
        }
        
        public void DeleteGood(DataManager.DMModel.Good item) {
            base.Channel.DeleteGood(item);
        }
        
        public System.Threading.Tasks.Task DeleteGoodAsync(DataManager.DMModel.Good item) {
            return base.Channel.DeleteGoodAsync(item);
        }
    }
}
